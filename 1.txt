进程：
1：有独立功能的程序 
2：在某个数据集合上的运行活动
程序：
一系列指令的集合
区别：
1：程序是静态的概念，进程是动态的概念
2：程序可以长久保存，进程有生命周期
3：进程是竞争系统资源的基本单位
4：进程和程序无一一对应关系，多个进程可以包含一个程序，一个程序可以产生多个进程

三次握手：
1：客户端向服务端发送syn（synchornize sequence numbers），进入syn_send
2：服务端收到syn后，向客户端确认syn，同时也想客户端发送syn，进入syn_recv
3：客户端收到syn+ack包后，向服务器发送ack，完成后，进入已建立状态
四次挥手：
1：客户端向服务端发送fin，用来关闭客户端和服务端的数据传输
2：服务端收到fin后，向客户端发送ack，进入close_wait
3: 服务端发送fin，用来关闭服务端和客户端的数据传输，进入last_wait状态
4：客户端收到fin后，进入time_wait状态，并发送ack给服务端，服务端进入close状态

dns解析过程：
user向本地dns服务器发送请求，
本地dns向根服务器发送查询请求.com，
本地dns在向.com服务器查询baidu.com地址
本地dns在向baidu.com发送请求查询www.baidu.com

数据库事务四大特性（acid）
1：原子性（atomicity）要么全完成，要么全回滚
2：一致性（consistency）在开始之前和结束之后，数据库的完整性约束没有被破坏
3：隔离性（isolation）在一个时间只有一个事务在运行。
4：持久性（durability）在事务结束后，便会持久化到数据库。

进程通信：消息队列，共享存储，socket

负载均衡：
1：http重定向
2：dns域名解析
3：反向代理
4：链路层负载均衡
5：ip层负载均衡

线程池的参数：
corepoolsize：核心线程池的大小
maxminnumpoolsize：最大线程大小
keeplivetime：存活时间
unit：时间
workqueue：等待任务进入的队列
handler：拒绝策略

网络5层划分
1：实体层
2：链接层
3：网络层
4：传输层
5：应用层

设计模式
1：单例
2：工厂
3：策略
4：装饰者
5：观察者

kafka的message构成：（metadata,body）
1：消息长度
2：文件格式
3：压缩格式
4：crc32

hdfs读过程：
1：client请求namenode，获取要读数据所在的位置
2：根据namenode返回结果，找一台建立socket
3：datanode响应后，已packet单元打包
4：客户端写入本地文件
hdfs写过程：
1：client请求namenode上传文件，namenode判断是否可上传
2：返回
3：client在请求放入那些机器
4：namenode返回a，b，c
5：client写入a，a->b b->c
6: client已packet单元发送
7：如果block不够在重复过程